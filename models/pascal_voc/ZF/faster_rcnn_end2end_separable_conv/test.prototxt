name: "ZF_separable_conv"

input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}

input: "im_info"
input_shape {
  dim: 1
  dim: 3
}

#========= conv1-conv5 ============

layer {
	name: "conv1"
	type: "Convolution"
	bottom: "data"
	top: "conv1"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	param { lr_mult: 2.0 decay_mult: 2.0 }
	convolution_param {
		num_output: 96
		kernel_size: 7
		pad: 3
		stride: 2
	}
}

layer {
	name: "conv1"
	type: "ReLU"
	bottom: "conv1"
	top: "conv1"
}

layer {
      name: "norm1"
      type: "LRN"
      bottom: "conv1"
      top: "norm1"
      lrn_param {
      	   local_size: 3
	   alpha: 0.00005
	   beta: 0.75
	   norm_region: WITHIN_CHANNEL
           engine: CAFFE
      }
}

layer {
	name: "pool1"
	type: "Pooling"
	bottom: "norm1"
	top: "pool1"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}

######
layer {
	name: "conv2_5_5"
	type: "Convolution"
	bottom: "pool1"
	top: "conv2_5_5"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	convolution_param {
		num_output: 96
		kernel_size: 5
		pad: 2
		stride: 2
		group: 96
		weight_filler {
			type: "msra"
		}
		bias_term: false
	}
}

layer {
      name: "conv2_5_5/bn"
      type: "BatchNorm"
      bottom: "conv2_5_5"
      top: "conv2_5_5/bn"
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
}

layer {
      name: "conv2_5_5/bn_scale"
      type: "Scale"
      bottom: "conv2_5_5/bn"
      top: "conv2_5_5/bn"
      scale_param {
           bias_term: true
      }
}

layer {
	name: "conv2_5_5/bn_relu"
	type: "ReLU"
	bottom: "conv2_5_5/bn"
	top: "conv2_5_5/bn"
}
###
layer {
	name: "conv2_1_1"
      	type: "Convolution"
	bottom: "conv2_5_5/bn"
	top: "conv2_1_1"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_term: false
	}
}

layer {
      name: "conv2_1_1/bn"
      type: "BatchNorm"
      bottom: "conv2_1_1"
      top: "conv2_1_1/bn"
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
}

layer {
      name: "conv2_1_1/bn_scale"
      type: "Scale"
      bottom: "conv2_1_1/bn"
      top: "conv2_1_1/bn"
      scale_param {
      bias_term: true
      }
}

layer {
      name: "conv2_1_1/bn_relu"
      type: "ReLU"
      bottom: "conv2_1_1/bn"
      top: "conv2_1_1/bn"
}
######
layer {
	name: "pool2"
	type: "Pooling"
	bottom: "conv2_1_1/bn"
	top: "pool2"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
######
layer {
	name: "conv3_3_3"
	type: "Convolution"
	bottom: "pool2"
	top: "conv3_3_3"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		group: 256
		weight_filler {
			type: "msra"
		}
		bias_term: false
	}
}

layer {
      name: "conv3_3_3/bn"
      type: "BatchNorm"
      bottom: "conv3_3_3"
      top: "conv3_3_3/bn"
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
}

layer {
      name: "conv3_3_3/bn_scale"
      type: "Scale"
      bottom: "conv3_3_3/bn"
      top: "conv3_3_3/bn"
      scale_param {
      		  bias_term: true
      }
}

layer {
      name: "conv3_3_3/bn_relu"
      type: "ReLU"
      bottom: "conv3_3_3/bn"	
      top: "conv3_3_3/bn"
}
###
layer {
	name: "conv3_1_1"
	type: "Convolution"
	bottom: "conv3_3_3/bn"
	top: "conv3_1_1"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	convolution_param {
		num_output: 384
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_term: false
	}
}

layer {
      name: "conv3_1_1/bn"
      type: "BatchNorm"
      bottom: "conv3_1_1"
      top: "conv3_1_1/bn"
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
}

layer {
      name: "conv3_1_1/bn_scale"
      type: "Scale"
      bottom: "conv3_1_1/bn"
      top: "conv3_1_1/bn"
      scale_param {
      		bias_term: true
      }
}

layer {
      name: "conv3_1_1/bn_relu"
      type: "ReLU"
      bottom: "conv3_1_1/bn"
      top: "conv3_1_1/bn"
}
#########
layer {
	name: "conv4_3_3"
	type: "Convolution"
	bottom: "conv3_1_1/bn"
	top: "conv4_3_3"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
		group: 384
		weight_filler {
			type: "msra"
		}
		bias_term: false
	}
}

layer {
      name: "conv4_3_3/bn"
      type: "BatchNorm"
      bottom: "conv4_3_3"
      top: "conv4_3_3/bn"
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
}

layer {
      name: "conv4_3_3/bn_scale"
      type: "Scale"
      bottom: "conv4_3_3/bn"
      top: "conv4_3_3/bn"
      scale_param {
      		bias_term: true
      }
}

layer {
      name: "conv4_3_3/bn_relu"
      type: "ReLU"
      bottom: "conv4_3_3/bn"
      top: "conv4_3_3/bn"
}
###
layer {
	name: "conv4_1_1"
	type: "Convolution"
	bottom: "conv4_3_3/bn"
	top: "conv4_1_1"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	convolution_param {
		num_output: 384
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_term: false
	}
}

layer {
      name: "conv4_1_1/bn"
      type: "BatchNorm"
      bottom: "conv4_1_1"
      top: "conv4_1_1/bn"
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
}

layer {
      name: "conv4_1_1/bn_scale"
      type: "Scale"
      bottom: "conv4_1_1/bn"
      top: "conv4_1_1/bn"
      scale_param {
      		bias_term: true
      }
}

layer {
	name: "conv4_1_1/bn_relu"
	type: "ReLU"
	bottom: "conv4_1_1/bn"
	top: "conv4_1_1/bn"
}
########
layer {
	name: "conv5_3_3"
	type: "Convolution"
	bottom: "conv4_1_1/bn"
	top: "conv5_3_3"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
		group: 384
		weight_filler {
			type: "msra"
		}
		bias_term: false
	}
}

layer {
      name: "conv5_3_3/bn"
      type: "BatchNorm"
      bottom: "conv5_3_3"
      top: "conv5_3_3/bn"
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
}

layer {
      name: "conv5_3_3/bn_scale"
      type: "Scale"
      bottom: "conv5_3_3/bn"
      top: "conv5_3_3/bn"
      scale_param {
      		bias_term: true
      }
}

layer {
      name: "conv5_3_3/bn_relu"
      type: "ReLU"
      bottom: "conv5_3_3/bn"
      top: "conv5_3_3/bn"
}
###
layer {
	name: "conv5_1_1"
	type: "Convolution"
	bottom: "conv5_3_3/bn"
	top: "conv5_1_1"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		weight_filler {
			type: "msra"
		}
		bias_term: false
	}
}

layer {
      name: "conv5_1_1/bn"
      type: "BatchNorm"
      bottom: "conv5_1_1"
      top: "conv5_1_1/bn"
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
      param { lr_mult: 0 decay_mult: 0 }
}

layer {
      name: "conv5_1_1/bn_scale"
      type: "Scale"
      bottom: "conv5_1_1/bn"
      top: "conv5_1_1/bn"
      scale_param {
      		bias_term: true
      }
}

layer {
	name: "conv5_1_1/bn_relu"
	type: "ReLU"
	bottom: "conv5_1_1/bn"
	top: "conv5_1_1/bn"
}

#========= RPN ============
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_1_1/bn"
  top: "rpn/output"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 256
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}

##########
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "rpn_cls_score"
   top: "rpn_cls_score_reshape"
   name: "rpn_cls_score_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

#========= RoI Proposal ============

layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param { shape { dim: 0 dim: 18 dim: -1 dim: 0 } }
}
layer {
  name: 'proposal'
  type: 'Python'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rois'
  python_param {
    module: 'rpn.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "'feat_stride': 16"
  }
}

#========= RCNN ============

layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5_1_1/bn"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_w: 6
    pooled_h: 6
    spatial_scale: 0.0625 # 1/16
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 21
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 84
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
